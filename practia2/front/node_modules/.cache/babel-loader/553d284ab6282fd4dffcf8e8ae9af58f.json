{"ast":null,"code":"var _jsxFileName = \"/home/bj/go/src/frontend/src/components/Body/Body.jsx\";\nimport React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\"; //import Editor from './Editor';\n//import List from '@material-ui/core/List';\n//import ListItem from '@material-ui/core/ListItem';\n//import ListItemText from '@material-ui/core/ListItemText';\n//import ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\"; //import Paper from '@material-ui/core/Paper';\n\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Chart } from \"react-google-charts\";\nlet id = 0;\n/*\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n*/\n\nfunction TabContainer(props) {\n  switch (props.flag) {\n    case 0:\n      {\n        return React.createElement(Paper, {\n          style: {\n            overflow: \"auto\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Table, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(TableHead, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(TableRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"PID\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"USUARIO\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"ESTADO\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"RAM%\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"NOMBRE\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Opcions\"))), React.createElement(TableBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, props.data.map(row => React.createElement(TableRow, {\n          key: row.Pid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, row.Pid), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, row.User), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, row.Estado), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, row.Memoria), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, row.Nombre), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => props.send(row.Pid),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"kill\")))))));\n      }\n\n    case 1:\n      {\n        console.log(props.data);\n        return React.createElement(Paper, {\n          style: {\n            overflow: \"auto\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Chart, {\n          width: 300,\n          height: \"300px\",\n          chartType: \"AreaChart\",\n          loader: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"Loading Chart\"),\n          data: props.data,\n          options: {\n            title: \"CPU server\",\n            hAxis: {\n              title: \"Time\",\n              titleTextStyle: {\n                color: \"#333\"\n              }\n            },\n            vAxis: {\n              minValue: 0\n            },\n            // For the legend to fit, we make the chart area smaller\n            chartArea: {\n              width: \"100%\",\n              height: \"100%\"\n            } // lineWidth: 25\n\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      }\n\n    case 2:\n      {\n        return React.createElement(Paper, {\n          style: {\n            overflow: \"auto\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Chart, {\n          width: 300,\n          height: \"300px\",\n          chartType: \"AreaChart\",\n          loader: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, \"Loading Chart\"),\n          data: props.data,\n          options: {\n            title: \"RAM servidor\",\n            hAxis: {\n              title: \"Time\",\n              titleTextStyle: {\n                color: \"#333\"\n              }\n            },\n            vAxis: {\n              minValue: 0\n            },\n            // For the legend to fit, we make the chart area smaller\n            chartArea: {\n              width: \"100%\",\n              height: \"80%\"\n            } // lineWidth: 25\n\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }));\n      }\n  }\n\n  return React.createElement(Paper, {\n    style: {\n      overflow: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"PID\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"USUARIO\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"ESTADO\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"RAM%\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"NOMBRE\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Opcions\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, props.data.map(row => React.createElement(TableRow, {\n    key: row.Pid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, row.Pid), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, row.User), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, row.Estado), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, row.Memoria), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, row.Nombre), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => props.send(row.Pid),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"kill\")))))));\n}\n\nexport default class Body extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n\n    this.handleChange = (event, value) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.handlecodeChange = code => {\n      console.log(\"desde Footer:: \" + code);\n    };\n\n    this.titulos = [\"Principal\", \"CPU\", \"RAM\"];\n    console.log(\"Constructor del Footer\");\n    console.log(this.props.data);\n  }\n\n  render() {\n    const value = this.state.value;\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: value,\n      onChange: this.handleChange,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: this.titulos[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: this.titulos[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: this.titulos[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: this.titulos[3],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), value === 0 && React.createElement(TabContainer, {\n      flag: 0,\n      data: this.props.data,\n      send: this.props.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), value === 1 && React.createElement(TabContainer, {\n      flag: 1,\n      data: this.props.datacpu,\n      send: this.props.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), value === 2 && React.createElement(TabContainer, {\n      flag: 2,\n      data: this.props.dataram,\n      send: this.props.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/bj/go/src/frontend/src/components/Body/Body.jsx"],"names":["React","Component","Paper","Tabs","Tab","Table","TableBody","TableCell","TableHead","TableRow","Button","makeStyles","Chart","id","TabContainer","props","flag","overflow","data","map","row","Pid","User","Estado","Memoria","Nombre","send","console","log","title","hAxis","titleTextStyle","color","vAxis","minValue","chartArea","width","height","Body","constructor","state","value","handleChange","event","setState","handlecodeChange","code","titulos","render","datacpu","dataram"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n//import Editor from './Editor';\n//import List from '@material-ui/core/List';\n//import ListItem from '@material-ui/core/ListItem';\n//import ListItemText from '@material-ui/core/ListItemText';\n//import ListSubheader from '@material-ui/core/ListSubheader';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n//import Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Chart } from \"react-google-charts\";\nlet id = 0;\n\n/*\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n*/\nfunction TabContainer(props) {\n  switch (props.flag) {\n    case 0: {\n      return (\n        <Paper style={{ overflow: \"auto\" }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"right\">PID</TableCell>\n                <TableCell align=\"right\">USUARIO</TableCell>\n                <TableCell align=\"right\">ESTADO</TableCell>\n                <TableCell align=\"right\">RAM%</TableCell>\n                <TableCell align=\"right\">NOMBRE</TableCell>\n                <TableCell align=\"right\">Opcions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {props.data.map(row => (\n                <TableRow key={row.Pid}>\n                  <TableCell align=\"right\">{row.Pid}</TableCell>\n                  <TableCell align=\"right\">{row.User}</TableCell>\n                  <TableCell align=\"right\">{row.Estado}</TableCell>\n                  <TableCell align=\"right\">{row.Memoria}</TableCell>\n                  <TableCell align=\"right\">{row.Nombre}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => props.send(row.Pid)}\n                    >\n                      kill\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n    }\n    case 1: {\n        console.log(props.data);\n      return (\n        <Paper style={{ overflow: \"auto\" }}>\n          <Chart\n            width={300}\n            height={\"300px\"}\n            chartType=\"AreaChart\"\n            loader={<div>Loading Chart</div>}\n            data={props.data}\n            options={{\n              title: \"CPU server\",\n              hAxis: { title: \"Time\", titleTextStyle: { color: \"#333\" } },\n              vAxis: { minValue: 0 },\n              // For the legend to fit, we make the chart area smaller\n              chartArea: { width: \"100%\", height: \"100%\" }\n              // lineWidth: 25\n            }}\n          />\n        </Paper>\n      );\n    }\n    case 2: {\n        return (\n            <Paper style={{ overflow: \"auto\" }}>\n              <Chart\n                width={300}\n                height={\"300px\"}\n                chartType=\"AreaChart\"\n                loader={<div>Loading Chart</div>}\n                data={props.data}\n                options={{\n                  title: \"RAM servidor\",\n                  hAxis: { title: \"Time\", titleTextStyle: { color: \"#333\" } },\n                  vAxis: { minValue: 0 },\n                  // For the legend to fit, we make the chart area smaller\n                  chartArea: { width: \"100%\", height: \"80%\" }\n                  // lineWidth: 25\n                }}\n              />\n            </Paper>\n          );\n    }\n  }\n  return (\n    <Paper style={{ overflow: \"auto\" }}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">PID</TableCell>\n            <TableCell align=\"right\">USUARIO</TableCell>\n            <TableCell align=\"right\">ESTADO</TableCell>\n            <TableCell align=\"right\">RAM%</TableCell>\n            <TableCell align=\"right\">NOMBRE</TableCell>\n            <TableCell align=\"right\">Opcions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map(row => (\n            <TableRow key={row.Pid}>\n              <TableCell align=\"right\">{row.Pid}</TableCell>\n              <TableCell align=\"right\">{row.User}</TableCell>\n              <TableCell align=\"right\">{row.Estado}</TableCell>\n              <TableCell align=\"right\">{row.Memoria}</TableCell>\n              <TableCell align=\"right\">{row.Nombre}</TableCell>\n              <TableCell align=\"right\">\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => props.send(row.Pid)}\n                >\n                  kill\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\nexport default class Body extends Component {\n  state = {\n    value: 0,\n    \n  };\n\n  constructor(props) {\n    super(props);\n    this.titulos = [\"Principal\", \"CPU\", \"RAM\"];\n    console.log(\"Constructor del Footer\");\n    console.log(this.props.data);\n  }\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n  handlecodeChange = code => {\n    console.log(\"desde Footer:: \" + code);\n  };\n  render() {\n    const { value } = this.state;\n\n    return (\n      <Paper>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          centered\n        >\n          {<Tab label={this.titulos[0]} />}\n          {<Tab label={this.titulos[1]} />}\n          {<Tab label={this.titulos[2]} />}\n          {<Tab label={this.titulos[3]} />}\n        </Tabs>\n\n        {value === 0 && (\n          <TabContainer\n            flag={0}\n            data={this.props.data}\n            send={this.props.send}\n          ></TabContainer>\n        )}\n        {value === 1 && (\n          <TabContainer\n            flag={1}\n            data={this.props.datacpu}\n            send={this.props.send}\n            \n          ></TabContainer>\n        )}\n        {value === 2 && (\n          <TabContainer\n            flag={2}\n            data={this.props.dataram}\n            send={this.props.send}\n          ></TabContainer>\n        )}\n      </Paper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}