{"ast":null,"code":"var _jsxFileName = \"/home/bj/Documentos/Sopes2/practia2/frontend/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport Login from './components/Login/Login';\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\nclass App extends Component {\n  //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n\n  /*\n  state = {\n    cpuinfo:-1,\n    meminfo:-1,\n    Cpuu: [[\"Time\",\"Cpu\"]],\n    Infop: new Array(),\n    Memfree : -1,\n    Mempercent: [[\"Time\",\"Ram\"]],\n    Memtotal : -1,\n    Procsr : -1,\n    Procss : -1,\n    Procst : -1,\n    Procsz : -1,\n    Totalprocs : -1,\n    autorize: false,\n    username:\"\",\n    pass:\"\"\n  }\n  */\n  constructor(props) {\n    console.log(\"Constructor de App\");\n    super(props);\n    this.currencies = [{\n      value: 'USD',\n      label: '$'\n    }, {\n      value: 'EUR',\n      label: '€'\n    }, {\n      value: 'BTC',\n      label: '฿'\n    }, {\n      value: 'JPY',\n      label: '¥'\n    }];\n    this.state = {\n      listacomplementos: new Array()\n    };\n\n    this.handleUserChange = event => {\n      console.log(\"NOMBRE DEL USER:\" + event.target.value);\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handlePassChange = event => {\n      console.log(\"NOMBRE DEL PASS:\" + event.target.value);\n      this.setState({\n        pass: event.target.value\n      });\n    };\n\n    this.loguearse = () => {\n      if (this.state.username == \"admin\" && this.state.pass == \"admin\") {\n        this.setState({\n          autorize: true\n        });\n      }\n    };\n\n    connect();\n    console.log(this.state.Cpuu);\n  }\n\n  componentDidMount() {\n    connect(msg => {\n      console.log(\"New Message\");\n      let today = new Date();\n      let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      let dateTime = date + ' ' + time; //console.log(this.state.Cpuu);\n      //console.log(msg);\n\n      let obj = JSON.parse(msg.data); //console.log(obj)\n\n      this.setState(prevState => ({\n        //chatHistory: [...this.state.chatHistory, msg]\n        Cpuu: [...this.state.Cpuu, [dateTime, obj.Cpuu]],\n        Infop: obj.Infop,\n        Memfree: obj.Memfree,\n        //[Date.now().toLocaleString(),obj.Mempercent]\n        Mempercent: [...this.state.Mempercent, [dateTime, obj.Mempercent]],\n        Memtotal: obj.Memtotal,\n        Procsr: obj.Procsr,\n        Procss: obj.Procss,\n        Procst: obj.Procst,\n        Procsz: obj.Procsz,\n        Totalprocs: obj.Totalprocs,\n        cpuinfo: obj.Cpuu,\n        meminfo: obj.Mempercent\n      }));\n      console.log(obj);\n    });\n  }\n\n  send(pid) {\n    //console.log(pid)\n    sendMsg(pid); //console.log(event.target.value)\n\n    /*if(event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n    */\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Body, {\n      complementos: this.state.listacomplementos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bj/Documentos/Sopes2/practia2/frontend/src/App.js"],"names":["React","Component","Fragment","Header","Body","Login","connect","sendMsg","TextField","makeStyles","Button","App","constructor","props","console","log","currencies","value","label","state","listacomplementos","Array","handleUserChange","event","target","setState","username","handlePassChange","pass","loguearse","autorize","Cpuu","componentDidMount","msg","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","dateTime","obj","JSON","parse","data","prevState","Infop","Memfree","Mempercent","Memtotal","Procsr","Procss","Procst","Procsz","Totalprocs","cpuinfo","meminfo","send","pid","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport Login from './components/Login/Login';\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\n\n\n\n\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\nclass App extends Component {\n\n\n    currencies = [{\n            value: 'USD',\n            label: '$',\n        },\n        {\n            value: 'EUR',\n            label: '€',\n        },\n        {\n            value: 'BTC',\n            label: '฿',\n        },\n        {\n            value: 'JPY',\n            label: '¥',\n        },\n    ];\n    //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n    /*\n    state = {\n      cpuinfo:-1,\n      meminfo:-1,\n      Cpuu: [[\"Time\",\"Cpu\"]],\n      Infop: new Array(),\n      Memfree : -1,\n      Mempercent: [[\"Time\",\"Ram\"]],\n      Memtotal : -1,\n      Procsr : -1,\n      Procss : -1,\n      Procst : -1,\n      Procsz : -1,\n      Totalprocs : -1,\n      autorize: false,\n      username:\"\",\n      pass:\"\"\n    }\n    */\n    state = {\n        listacomplementos: new Array()\n    }\n\n    constructor(props) {\n        console.log(\"Constructor de App\")\n        super(props);\n        connect();\n\n        console.log(this.state.Cpuu);\n    }\n    handleUserChange = (event) => {\n        console.log(\"NOMBRE DEL USER:\" + event.target.value);\n        this.setState({ username: event.target.value })\n    }\n    handlePassChange = (event) => {\n        console.log(\"NOMBRE DEL PASS:\" + event.target.value);\n        this.setState({ pass: event.target.value })\n    }\n    loguearse = () => {\n        if (this.state.username == \"admin\" && this.state.pass == \"admin\") {\n            this.setState({ autorize: true });\n        }\n    }\n    componentDidMount() {\n        connect((msg) => {\n            console.log(\"New Message\")\n            let today = new Date();\n            let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            let dateTime = date + ' ' + time;\n            //console.log(this.state.Cpuu);\n            //console.log(msg);\n            let obj = JSON.parse(msg.data);\n            //console.log(obj)\n            this.setState(prevState => ({\n                //chatHistory: [...this.state.chatHistory, msg]\n                Cpuu: [...this.state.Cpuu, [dateTime, obj.Cpuu]],\n                Infop: obj.Infop,\n                Memfree: obj.Memfree,\n                //[Date.now().toLocaleString(),obj.Mempercent]\n                Mempercent: [...this.state.Mempercent, [dateTime, obj.Mempercent]],\n                Memtotal: obj.Memtotal,\n                Procsr: obj.Procsr,\n                Procss: obj.Procss,\n                Procst: obj.Procst,\n                Procsz: obj.Procsz,\n                Totalprocs: obj.Totalprocs,\n                cpuinfo: obj.Cpuu,\n                meminfo: obj.Mempercent\n\n            }))\n\n            console.log(obj);\n        });\n    }\n    send(pid) {\n        //console.log(pid)\n        sendMsg(pid);\n        //console.log(event.target.value)\n        /*if(event.keyCode === 13) {\n          sendMsg(event.target.value);\n          event.target.value = \"\";\n        }\n        */\n    }\n\n    render() {\n\n\n\n\n        return ( <\n            Fragment >\n            <\n            Header / >\n\n            <\n            Body complementos = { this.state.listacomplementos }\n\n            /> <\n            /Fragment>\n        );\n\n\n\n\n\n\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}