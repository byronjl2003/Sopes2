{"ast":null,"code":"var _jsxFileName = \"/home/bj/go/src/frontend/src/components/Body/Body.jsx\";\nimport React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\"; //import Editor from './Editor';\n//import List from '@material-ui/core/List';\n//import ListItem from '@material-ui/core/ListItem';\n//import ListItemText from '@material-ui/core/ListItemText';\n//import ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\"; //import Paper from '@material-ui/core/Paper';\n\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Chart } from \"react-google-charts\";\nimport AnimatedNumber from 'react-animated-number';\nimport prettyBytes from 'pretty-bytes';\nlet id = 0;\n/*\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n*/\n\nfunction TabContainer(props) {\n  console.log(\"data TabContainer\"); //console.log(props.data);\n\n  switch (props.flag) {\n    case 0:\n      {\n        return React.createElement(Paper, {\n          style: {\n            overflow: \"auto\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(AnimatedNumber, {\n          component: \"text\",\n          value: props.procsTotal,\n          style: {\n            transition: '0.8s ease-out',\n            fontSize: 24,\n            transitionProperty: 'background-color, color, opacity'\n          },\n          frameStyle: perc => perc === 100 ? {} : {\n            backgroundColor: '#ffeb3b'\n          },\n          duration: 300,\n          formatValue: n => 'Total Procesos: ' + prettyBytes(n),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(AnimatedNumber, {\n          component: \"text\",\n          value: props.procsR,\n          style: {\n            transition: '0.8s ease-out',\n            fontSize: 24,\n            transitionProperty: 'background-color, color, opacity'\n          },\n          frameStyle: perc => perc === 100 ? {} : {\n            backgroundColor: '#ffeb3b'\n          },\n          duration: 300,\n          formatValue: n => 'Procesos en ejecucion: ' + prettyBytes(n),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(AnimatedNumber, {\n          component: \"text\",\n          value: props.procsS,\n          style: {\n            transition: '0.8s ease-out',\n            fontSize: 24,\n            transitionProperty: 'background-color, color, opacity'\n          },\n          frameStyle: perc => perc === 100 ? {} : {\n            backgroundColor: '#ffeb3b'\n          },\n          duration: 300,\n          formatValue: n => 'Procesos dormidos: ' + prettyBytes(n),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(AnimatedNumber, {\n          component: \"text\",\n          value: props.procsT,\n          style: {\n            transition: '0.8s ease-out',\n            fontSize: 24,\n            transitionProperty: 'background-color, color, opacity'\n          },\n          frameStyle: perc => perc === 100 ? {} : {\n            backgroundColor: '#ffeb3b'\n          },\n          duration: 300,\n          formatValue: n => 'Procesos parados: ' + prettyBytes(n),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(AnimatedNumber, {\n          component: \"text\",\n          value: props.procsZ,\n          style: {\n            transition: '0.8s ease-out',\n            fontSize: 24,\n            transitionProperty: 'background-color, color, opacity'\n          },\n          frameStyle: perc => perc === 100 ? {} : {\n            backgroundColor: '#ffeb3b'\n          },\n          duration: 300,\n          formatValue: n => 'Procesos zombies: ' + prettyBytes(n),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(Table, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(TableHead, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(TableRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"PID\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"USUARIO\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"ESTADO\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"RAM%\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"NOMBRE\"), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Opcions\"))), React.createElement(TableBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, props.data.map(row => React.createElement(TableRow, {\n          key: row.Pid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, row.Pid), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, row.User), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, row.Estado), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, row.Memoria), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, row.Nombre), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => props.send(row.Pid),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"kill\")))))));\n      }\n\n    case 1:\n      {\n        //console.log(props.data);\n        return React.createElement(Paper, {\n          style: {\n            overflow: \"auto\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(AnimatedNumber, {\n          component: \"text\",\n          value: props.cpu,\n          style: {\n            transition: '0.8s ease-out',\n            fontSize: 24,\n            transitionProperty: 'background-color, color, opacity'\n          },\n          frameStyle: perc => perc === 100 ? {} : {\n            backgroundColor: '#ffeb3b'\n          },\n          duration: 300,\n          formatValue: n => 'CPU utilizado: ' + prettyBytes(n),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }), React.createElement(Chart, {\n          width: \"auto\",\n          height: \"auto\",\n          chartType: \"AreaChart\",\n          loader: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, \"Loading Chart\"),\n          data: props.data,\n          options: {\n            title: \"CPU server\",\n            hAxis: {\n              title: \"Time\",\n              titleTextStyle: {\n                color: \"#333\"\n              }\n            },\n            vAxis: {\n              minValue: 0\n            },\n            // For the legend to fit, we make the chart area smaller\n            hartArea: {\n              width: \"90%\",\n              height: \"80%\"\n            } // lineWidth: 25\n\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }));\n      }\n\n    case 2:\n      {\n        //console.log(props.data);\n        let usedmem = props.memTotal - props.memFree;\n        console.log(\"Memoria utilizada: \" + usedmem);\n        console.log(\"Memoria total: \" + props.memTotal);\n        console.log(\"Memoria total: \" + props.memFree);\n        return React.createElement(Paper, {\n          style: {\n            overflow: \"auto\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(AnimatedNumber, {\n          component: \"text\",\n          value: props.memTotal,\n          style: {\n            transition: '0.8s ease-out',\n            fontSize: 24,\n            transitionProperty: 'background-color, color, opacity'\n          },\n          frameStyle: perc => perc === 100 ? {} : {\n            backgroundColor: '#ffeb3b'\n          },\n          duration: 300,\n          formatValue: n => 'Memoria total: ' + prettyBytes(n),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }), React.createElement(AnimatedNumber, {\n          component: \"text\",\n          value: usedmem,\n          style: {\n            transition: '0.8s ease-out',\n            fontSize: 24,\n            transitionProperty: 'background-color, color, opacity'\n          },\n          frameStyle: perc => perc === 100 ? {} : {\n            backgroundColor: '#ffeb3b'\n          },\n          duration: 300,\n          formatValue: n => 'Memoria Utilizada: ' + prettyBytes(n),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }), React.createElement(AnimatedNumber, {\n          component: \"text\",\n          value: props.memPercent,\n          style: {\n            transition: '0.8s ease-out',\n            fontSize: 24,\n            transitionProperty: 'background-color, color, opacity'\n          },\n          frameStyle: perc => perc === 100 ? {} : {\n            backgroundColor: '#ffeb3b'\n          },\n          duration: 300,\n          formatValue: n => 'Porcentaje: ' + prettyBytes(n),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }), React.createElement(Chart, {\n          width: \"auto\",\n          height: \"auto\",\n          chartType: \"AreaChart\",\n          loader: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226\n            },\n            __self: this\n          }, \"Loading Chart\"),\n          data: props.data,\n          options: {\n            title: \"RAM server\",\n            hAxis: {\n              title: \"Time\",\n              titleTextStyle: {\n                color: \"#333\"\n              }\n            },\n            vAxis: {\n              minValue: 0\n            },\n            // For the legend to fit, we make the chart area smaller\n            hartArea: {\n              width: \"90%\",\n              height: \"80%\"\n            } // lineWidth: 25\n\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }));\n      }\n  }\n}\n\nexport default class Body extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n\n    this.handleChange = (event, value) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.handlecodeChange = code => {\n      console.log(\"desde Footer:: \" + code);\n    };\n\n    this.titulos = [\"Principal\", \"CPU\", \"RAM\"];\n    console.log(\"Constructor del Footer\");\n    console.log(this.props.data);\n  }\n\n  render() {\n    const value = this.state.value;\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: value,\n      onChange: this.handleChange,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: this.titulos[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: this.titulos[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: this.titulos[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: this.titulos[3],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })), value === 0 && React.createElement(TabContainer, {\n      flag: 0,\n      data: this.props.data,\n      send: this.props.send,\n      totalProcs: this.props.totalProcs,\n      procsS: this.props.procsS,\n      procsR: this.props.procsR,\n      procsT: this.props.procsT,\n      procsZ: this.props.procsZ,\n      cpu: this.props.cpu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), value === 1 && React.createElement(TabContainer, {\n      flag: 1,\n      data: this.props.datacpu,\n      send: this.props.send,\n      totalProcs: this.props.totalProcs,\n      procsS: this.props.procsS,\n      procsR: this.props.procsR,\n      procsT: this.props.procsT,\n      procsZ: this.props.procsZ,\n      cpu: this.props.cpu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), value === 2 && React.createElement(TabContainer, {\n      flag: 2,\n      data: this.props.dataram,\n      send: this.props.send,\n      memTotal: this.props.memTotal,\n      memFree: this.props.memFree,\n      memPercent: this.props.memPercent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/bj/go/src/frontend/src/components/Body/Body.jsx"],"names":["React","Component","Paper","Tabs","Tab","Table","TableBody","TableCell","TableHead","TableRow","Button","makeStyles","Chart","AnimatedNumber","prettyBytes","id","TabContainer","props","console","log","flag","overflow","procsTotal","transition","fontSize","transitionProperty","perc","backgroundColor","n","procsR","procsS","procsT","procsZ","data","map","row","Pid","User","Estado","Memoria","Nombre","send","cpu","title","hAxis","titleTextStyle","color","vAxis","minValue","hartArea","width","height","usedmem","memTotal","memFree","memPercent","Body","constructor","state","value","handleChange","event","setState","handlecodeChange","code","titulos","render","totalProcs","datacpu","dataram"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n//import Editor from './Editor';\n//import List from '@material-ui/core/List';\n//import ListItem from '@material-ui/core/ListItem';\n//import ListItemText from '@material-ui/core/ListItemText';\n//import ListSubheader from '@material-ui/core/ListSubheader';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n//import Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Chart } from \"react-google-charts\";\nimport AnimatedNumber from 'react-animated-number';\nimport prettyBytes from 'pretty-bytes';\nlet id = 0;\n\n/*\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n*/\nfunction TabContainer(props) {\n    console.log(\"data TabContainer\")\n    //console.log(props.data);\n  switch (props.flag) {\n    case 0: {\n      return (\n        <Paper style={{ overflow: \"auto\" }}>\n          <AnimatedNumber component=\"text\" value={props.procsTotal}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 24,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => 'Total Procesos: '+prettyBytes(n)}/>\n              <br></br>\n\n              <AnimatedNumber component=\"text\" value={props.procsR}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 24,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => 'Procesos en ejecucion: '+prettyBytes(n)}/>\n              <br></br>\n\n              <AnimatedNumber component=\"text\" value={props.procsS}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 24,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => 'Procesos dormidos: '+prettyBytes(n)}/>\n              <br></br>\n              <AnimatedNumber component=\"text\" value={props.procsT}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 24,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => 'Procesos parados: '+prettyBytes(n)}/>\n              <br></br>\n              <AnimatedNumber component=\"text\" value={props.procsZ}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 24,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => 'Procesos zombies: '+prettyBytes(n)}/>\n              <br></br>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"right\">PID</TableCell>\n                <TableCell align=\"right\">USUARIO</TableCell>\n                <TableCell align=\"right\">ESTADO</TableCell>\n                <TableCell align=\"right\">RAM%</TableCell>\n                <TableCell align=\"right\">NOMBRE</TableCell>\n                <TableCell align=\"right\">Opcions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {props.data.map(row => (\n                <TableRow key={row.Pid}>\n                  <TableCell align=\"right\">{row.Pid}</TableCell>\n                  <TableCell align=\"right\">{row.User}</TableCell>\n                  <TableCell align=\"right\">{row.Estado}</TableCell>\n                  <TableCell align=\"right\">{row.Memoria}</TableCell>\n                  <TableCell align=\"right\">{row.Nombre}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => props.send(row.Pid)}\n                    >\n                      kill\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n    }\n    case 1: {\n        //console.log(props.data);\n      return (\n        <Paper style={{ overflow: \"auto\" }}>\n          <AnimatedNumber component=\"text\" value={props.cpu}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 24,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => 'CPU utilizado: '+prettyBytes(n)}/>\n              <br></br>\n          \n          <Chart\n            width={\"auto\"}\n            height={\"auto\"}\n            chartType=\"AreaChart\"\n            loader={<div>Loading Chart</div>}\n            data={props.data}\n            options={{\n              title: \"CPU server\",\n              hAxis: { title: \"Time\", titleTextStyle: { color: \"#333\" } },\n              vAxis: { minValue: 0 },\n              // For the legend to fit, we make the chart area smaller\n              hartArea: { width: \"90%\", height: \"80%\" }\n              // lineWidth: 25\n            }}\n          />\n        </Paper>\n      );\n    }\n    case 2: {\n        //console.log(props.data);\n        let usedmem = props.memTotal - props.memFree;\n        console.log(\"Memoria utilizada: \"+usedmem);\n        console.log(\"Memoria total: \"+props.memTotal);\n        console.log(\"Memoria total: \"+props.memFree);\n        return (\n            <Paper style={{ overflow: \"auto\" }}>\n              <AnimatedNumber component=\"text\" value={props.memTotal}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 24,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => 'Memoria total: '+prettyBytes(n)}/>\n              <br></br>\n              <AnimatedNumber component=\"text\" value={usedmem}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 24,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => 'Memoria Utilizada: '+prettyBytes(n)}/>\n              <br></br>\n              <AnimatedNumber component=\"text\" value={props.memPercent}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 24,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => 'Porcentaje: '+prettyBytes(n)}/>\n              \n              \n          <Chart\n            width={\"auto\"}\n            height={\"auto\"}\n            chartType=\"AreaChart\"\n            loader={<div>Loading Chart</div>}\n            data={props.data}\n            options={{\n              title: \"RAM server\",\n              hAxis: { title: \"Time\", titleTextStyle: { color: \"#333\" } },\n              vAxis: { minValue: 0 },\n              // For the legend to fit, we make the chart area smaller\n              hartArea: { width: \"90%\", height: \"80%\" }\n              // lineWidth: 25\n            }}\n          />\n        </Paper>\n          );\n    }\n  }\n  \n}\nexport default class Body extends Component {\n  state = {\n    value: 0,\n    \n  };\n\n  constructor(props) {\n    super(props);\n    this.titulos = [\"Principal\", \"CPU\", \"RAM\"];\n    console.log(\"Constructor del Footer\");\n    console.log(this.props.data);\n  }\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n  handlecodeChange = code => {\n    console.log(\"desde Footer:: \" + code);\n  };\n  render() {\n    const { value } = this.state;\n\n    return (\n      <Paper>\n        <Tabs\n          value={value}\n          onChange={this.handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          centered\n        >\n          {<Tab label={this.titulos[0]} />}\n          {<Tab label={this.titulos[1]} />}\n          {<Tab label={this.titulos[2]} />}\n          {<Tab label={this.titulos[3]} />}\n        </Tabs>\n\n        {value === 0 && (\n          <TabContainer\n            flag={0}\n            data={this.props.data}\n            send={this.props.send}\n            totalProcs={this.props.totalProcs}\n            procsS={this.props.procsS}\n            procsR={this.props.procsR}\n            procsT={this.props.procsT}\n            procsZ={this.props.procsZ}\n            cpu = {this.props.cpu}\n          ></TabContainer>\n        )}\n        {value === 1 && (\n          <TabContainer\n            flag={1}\n            data={this.props.datacpu}\n            send={this.props.send}\n            totalProcs={this.props.totalProcs}\n            procsS={this.props.procsS}\n            procsR={this.props.procsR}\n            procsT={this.props.procsT}\n            procsZ={this.props.procsZ}\n            cpu = {this.props.cpu}\n            \n          ></TabContainer>\n        )}\n        {value === 2 && (\n          <TabContainer\n            flag={2}\n            data={this.props.dataram}\n            send={this.props.send}\n            memTotal={this.props.memTotal}\n            memFree={this.props.memFree}\n            memPercent={this.props.memPercent}\n          ></TabContainer>\n        )}\n      </Paper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}