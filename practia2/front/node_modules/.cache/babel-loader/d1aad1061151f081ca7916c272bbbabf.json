{"ast":null,"code":"var _jsxFileName = \"/home/bj/go/src/frontend/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport Login from './components/Login/Login';\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\nimport AnimatedNumber from 'react-animated-number';\nimport prettyBytes from 'pretty-bytes';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\nclass App extends Component {\n  //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n  constructor(props) {\n    console.log(\"Constructor de App\");\n    super(props); //connect();\n\n    this.currencies = [{\n      value: 'USD',\n      label: '$'\n    }, {\n      value: 'EUR',\n      label: '€'\n    }, {\n      value: 'BTC',\n      label: '฿'\n    }, {\n      value: 'JPY',\n      label: '¥'\n    }];\n    this.state = {\n      Cpuu: [[\"Time\", \"Cpu\"]],\n      Infop: new Array(),\n      Memfree: -1,\n      Mempercent: [[\"Time\", \"Ram\"]],\n      Memtotal: -1,\n      Procsr: -1,\n      Procss: -1,\n      Procst: -1,\n      Procsz: -1,\n      Totalprocs: -1,\n      autorize: false,\n      username: \"\",\n      pass: \"\"\n    };\n\n    this.handleUserChange = event => {\n      console.log(\"NOMBRE DEL USER:\" + event.target.value);\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handlePassChange = event => {\n      console.log(\"NOMBRE DEL PASS:\" + event.target.value);\n      this.setState({\n        pass: event.target.value\n      });\n    };\n\n    this.loguearse = () => {\n      if (this.state.username == \"admin\" && this.state.pass == \"admin\") {\n        this.setState({\n          autorize: true\n        });\n      }\n    };\n\n    console.log(this.state.Cpuu);\n  }\n\n  componentDidMount() {\n    connect(msg => {\n      //console.log(\"New Message\")\n      let today = new Date();\n      let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      let dateTime = date + ' ' + time; //console.log(this.state.Cpuu);\n      //console.log(msg);\n\n      let obj = JSON.parse(msg.data); //console.log(obj)\n\n      this.setState(prevState => ({\n        //chatHistory: [...this.state.chatHistory, msg]\n        Cpuu: [...this.state.Cpuu, [dateTime, obj.Cpuu]],\n        Infop: obj.Infop,\n        Memfree: obj.Memfree,\n        //[Date.now().toLocaleString(),obj.Mempercent]\n        Mempercent: [...this.state.Mempercent, [dateTime, obj.Mempercent]],\n        Memtotal: obj.Memtotal,\n        Procsr: obj.Procsr,\n        Procss: obj.Procss,\n        Procst: obj.Procst,\n        Procsz: obj.Procsz,\n        Totalprocs: obj.Totalprocs,\n        username: \"\"\n      }));\n      console.log(obj);\n    });\n  }\n\n  send(pid) {\n    //console.log(pid)\n    sendMsg(pid); //console.log(event.target.value)\n\n    /*if(event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n    */\n  }\n\n  render() {\n    if (this.state.autorize) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(AnimatedNumber, {\n        component: \"text\",\n        value: this.state.Memtotal,\n        style: {\n          transition: '0.8s ease-out',\n          fontSize: 48,\n          transitionProperty: 'background-color, color, opacity'\n        },\n        frameStyle: perc => perc === 100 ? {} : {\n          backgroundColor: '#ffeb3b'\n        },\n        duration: 300,\n        formatValue: n => prettyBytes(n),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Body, {\n        data: this.state.Infop,\n        send: this.send,\n        datacpu: this.state.Cpuu,\n        dataram: this.state.Mempercent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Login, {\n        handleuser: this.handleUserChange,\n        handlepass: this.handlePassChange,\n        loguearse: this.loguearse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bj/go/src/frontend/src/App.js"],"names":["React","Component","Fragment","Header","Body","Login","connect","sendMsg","AnimatedNumber","prettyBytes","TextField","makeStyles","Button","App","constructor","props","console","log","currencies","value","label","state","Cpuu","Infop","Array","Memfree","Mempercent","Memtotal","Procsr","Procss","Procst","Procsz","Totalprocs","autorize","username","pass","handleUserChange","event","target","setState","handlePassChange","loguearse","componentDidMount","msg","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","dateTime","obj","JSON","parse","data","prevState","send","pid","render","transition","fontSize","transitionProperty","perc","backgroundColor","n"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport Login from './components/Login/Login';\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\nimport AnimatedNumber from 'react-animated-number';\nimport prettyBytes from 'pretty-bytes';\n\n\n\nimport {TextField} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\nclass App extends Component {\n  \n  \n  currencies = [\n    {\n      value: 'USD',\n      label: '$',\n    },\n    {\n      value: 'EUR',\n      label: '€',\n    },\n    {\n      value: 'BTC',\n      label: '฿',\n    },\n    {\n      value: 'JPY',\n      label: '¥',\n    },\n  ];\n  //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n\n  state = {\n    Cpuu: [[\"Time\",\"Cpu\"]],\n    Infop: new Array(),\n    Memfree : -1,\n    Mempercent: [[\"Time\",\"Ram\"]],\n    Memtotal : -1,\n    Procsr : -1,\n    Procss : -1,\n    Procst : -1,\n    Procsz : -1,\n    Totalprocs : -1,\n    autorize: false,\n    username:\"\",\n    pass:\"\"\n  }\n  constructor(props) {\n    console.log(\"Constructor de App\")\n    super(props);\n    //connect();\n    \n    console.log(this.state.Cpuu);\n  }\n  handleUserChange = (event) =>{\n    console.log(\"NOMBRE DEL USER:\"+event.target.value);\n    this.setState({username:event.target.value})\n  }\n  handlePassChange = (event) =>{\n    console.log(\"NOMBRE DEL PASS:\"+event.target.value);\n    this.setState({pass:event.target.value})\n  }\n  loguearse = () =>{\n    if(this.state.username==\"admin\" && this.state.pass==\"admin\"){\n      this.setState({autorize:true});\n    }\n  }\n  componentDidMount() {\n    connect((msg) => {\n      //console.log(\"New Message\")\n      let today = new Date();\n      let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n      let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      let dateTime = date+' '+time;\n      //console.log(this.state.Cpuu);\n      //console.log(msg);\n      let obj = JSON.parse(msg.data);\n      //console.log(obj)\n      this.setState(prevState => ({\n        //chatHistory: [...this.state.chatHistory, msg]\n        Cpuu:[...this.state.Cpuu,[dateTime,obj.Cpuu]],\n        Infop: obj.Infop,\n        Memfree: obj.Memfree,\n        //[Date.now().toLocaleString(),obj.Mempercent]\n        Mempercent: [...this.state.Mempercent,[dateTime,obj.Mempercent]] ,\n        Memtotal: obj.Memtotal,\n        Procsr: obj.Procsr,\n        Procss: obj.Procss,\n        Procst: obj.Procst,\n        Procsz: obj.Procsz,\n        Totalprocs : obj.Totalprocs,\n        username:\"\"\n\n      }))\n\n      console.log(obj);\n    });\n  }\n  send(pid) {\n    //console.log(pid)\n    sendMsg(pid);\n    //console.log(event.target.value)\n    /*if(event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n    */\n  }\n  \n  render() {\n    \n  \n   if(this.state.autorize){\n\n    return (\n      <Fragment>\n        <Header />\n        <AnimatedNumber component=\"text\" value={this.state.Memtotal}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 48,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => prettyBytes(n)}/>\n        <Body data={this.state.Infop} send={this.send} datacpu={this.state.Cpuu} dataram={this.state.Mempercent}/>\n      </Fragment>\n    );\n\n\n\n   }\n   else{\n    return (\n      <Fragment>\n       <Login handleuser={this.handleUserChange} handlepass={this.handlePassChange} loguearse={this.loguearse}></Login>\n      </Fragment>\n    );\n    \n   }\n   \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}