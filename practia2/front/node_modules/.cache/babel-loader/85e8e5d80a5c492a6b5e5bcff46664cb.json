{"ast":null,"code":"var _jsxFileName = \"/home/bj/Documentos/Sopes2/practia2/frontend/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\n\nclass App extends Component {\n  //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n\n  /*  \n  state = {\n  listacomplementos: new Array()\n  }\n  */\n  constructor(props) {\n    console.log(\"Constructor de App\");\n    super(props);\n    this.state = {\n      cpuinfo: -1,\n      meminfo: -1,\n      Cpuu: [[\"Time\", \"Cpu\"]],\n      Infop: new Array(),\n      Memfree: -1,\n      Mempercent: [[\"Time\", \"Ram\"]],\n      Memtotal: -1,\n      Procsr: -1,\n      Procss: -1,\n      Procst: -1,\n      Procsz: -1,\n      Totalprocs: -1,\n      autorize: false,\n      username: \"\",\n      pass: \"\"\n    };\n    console.log(this.state.Cpuu);\n  }\n\n  componentDidMount() {\n    console.log(\"En el componentDidMount de App \");\n    connect(msg => {\n      console.log(\"New Message\");\n      let today = new Date();\n      let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      let dateTime = date + ' ' + time;\n      console.log(this.state.Cpuu);\n      console.log(msg);\n      let obj = JSON.parse(msg.data); //console.log(obj)\n\n      this.setState(prevState => ({\n        //chatHistory: [...this.state.chatHistory, msg]\n        Cpuu: [...this.state.Cpuu, [dateTime, obj.Cpuu]],\n        Infop: obj.Infop,\n        Memfree: obj.Memfree,\n        //[Date.now().toLocaleString(),obj.Mempercent]\n        Mempercent: [...this.state.Mempercent, [dateTime, obj.Mempercent]],\n        Memtotal: obj.Memtotal,\n        Procsr: obj.Procsr,\n        Procss: obj.Procss,\n        Procst: obj.Procst,\n        Procsz: obj.Procsz,\n        Totalprocs: obj.Totalprocs,\n        cpuinfo: obj.Cpuu,\n        meminfo: obj.Mempercent\n      }));\n      console.log(obj);\n    });\n  }\n\n  send(pid) {\n    //console.log(pid)\n    sendMsg(pid); //console.log(event.target.value)\n\n    /*if(event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n    */\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Body, {\n      data: this.state.Infop,\n      send: this.send,\n      totalProcs: this.state.Totalprocs,\n      datacpu: this.state.Cpuu,\n      totalProcs: this.state.Totalprocs,\n      procsS: this.state.Procss,\n      procsR: this.state.Procsr,\n      procsT: this.state.Procst,\n      procsZ: this.state.ProcsZ,\n      cpu: this.state.cpuinfo,\n      dataram: this.state.Mempercent,\n      memTotal: this.state.Memtotal,\n      memFree: this.state.Memfree,\n      memPercent: this.state.meminfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bj/Documentos/Sopes2/practia2/frontend/src/App.js"],"names":["React","Component","Fragment","Header","Body","connect","sendMsg","App","constructor","props","console","log","state","cpuinfo","meminfo","Cpuu","Infop","Array","Memfree","Mempercent","Memtotal","Procsr","Procss","Procst","Procsz","Totalprocs","autorize","username","pass","componentDidMount","msg","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","dateTime","obj","JSON","parse","data","setState","prevState","send","pid","render","ProcsZ"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\n\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\n\n\n\n\nclass App extends Component {\n\n\n\n    //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n\n    state = {\n            cpuinfo: -1,\n            meminfo: -1,\n            Cpuu: [\n                [\"Time\", \"Cpu\"]\n            ],\n            Infop: new Array(),\n            Memfree: -1,\n            Mempercent: [\n                [\"Time\", \"Ram\"]\n            ],\n            Memtotal: -1,\n            Procsr: -1,\n            Procss: -1,\n            Procst: -1,\n            Procsz: -1,\n            Totalprocs: -1,\n            autorize: false,\n            username: \"\",\n            pass: \"\"\n        }\n        /*  \nstate = {\n    listacomplementos: new Array()\n}\n*/\n    constructor(props) {\n        console.log(\"Constructor de App\")\n        super(props);\n\n\n        console.log(this.state.Cpuu);\n    }\n\n    componentDidMount() {\n        console.log(\"En el componentDidMount de App \")\n        connect((msg) => {\n            console.log(\"New Message\")\n            let today = new Date();\n            let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            let dateTime = date + ' ' + time;\n            console.log(this.state.Cpuu);\n            console.log(msg);\n            let obj = JSON.parse(msg.data);\n            //console.log(obj)\n            this.setState(prevState => ({\n                //chatHistory: [...this.state.chatHistory, msg]\n                Cpuu: [...this.state.Cpuu, [dateTime, obj.Cpuu]],\n                Infop: obj.Infop,\n                Memfree: obj.Memfree,\n                //[Date.now().toLocaleString(),obj.Mempercent]\n                Mempercent: [...this.state.Mempercent, [dateTime, obj.Mempercent]],\n                Memtotal: obj.Memtotal,\n                Procsr: obj.Procsr,\n                Procss: obj.Procss,\n                Procst: obj.Procst,\n                Procsz: obj.Procsz,\n                Totalprocs: obj.Totalprocs,\n                cpuinfo: obj.Cpuu,\n                meminfo: obj.Mempercent\n\n            }))\n\n            console.log(obj);\n        });\n    }\n    send(pid) {\n        //console.log(pid)\n        sendMsg(pid);\n        //console.log(event.target.value)\n        /*if(event.keyCode === 13) {\n          sendMsg(event.target.value);\n          event.target.value = \"\";\n        }\n        */\n    }\n\n    render() {\n\n\n\n\n        return ( <\n            Fragment >\n            <\n            Header / >\n\n            <\n            Body\n            data = { this.state.Infop }\n            send = { this.send }\n            totalProcs = {this.state.Totalprocs}\n\n\n            datacpu = { this.state.Cpuu }\n            totalProcs = { this.state.Totalprocs }\n            procsS = { this.state.Procss }\n            procsR = { this.state.Procsr }\n            procsT = { this.state.Procst }\n            procsZ = { this.state.ProcsZ }\n            cpu = { this.state.cpuinfo }\n\n            dataram = { this.state.Mempercent }\n            memTotal = { this.state.Memtotal }\n            memFree = { this.state.Memfree }\n            memPercent = { this.state.meminfo }\n\n            / > < /\n            Fragment >\n        );\n\n\n\n\n\n\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}