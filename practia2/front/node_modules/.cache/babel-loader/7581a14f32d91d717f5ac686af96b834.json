{"ast":null,"code":"import _defineProperty from\"/home/bj/Documentos/Sopes2/practia2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/home/bj/Documentos/Sopes2/practia2/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/bj/Documentos/Sopes2/practia2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/bj/Documentos/Sopes2/practia2/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/bj/Documentos/Sopes2/practia2/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/bj/Documentos/Sopes2/practia2/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/bj/Documentos/Sopes2/practia2/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component,Fragment}from\"react\";import Header from'./components/Header/Header';import Body from'./components/Body/Body';import'./App.css';import{connect,sendMsg}from\"./api\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);//state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n/*  \nstate = {\n    listacomplementos: new Array()\n}\n*/function App(props){var _this;_classCallCheck(this,App);console.log(\"Constructor de App\");_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.state={cpuinfo:-1,meminfo:-1,Cpuu:[[\"Time\",\"Cpu\"]],Infop:new Array(),Memfree:-1,Mempercent:[[\"Time\",\"Ram\"]],Memtotal:-1,Procsr:-1,Procss:-1,Procst:-1,Procsz:-1,Totalprocs:-1,autorize:false,username:\"\",pass:\"\"};console.log(_this.state.Cpuu);return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;console.log(\"En el componentDidMount de App \");connect(function(msg){console.log(\"New Message\");var today=new Date();var date=today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();var time=today.getHours()+\":\"+today.getMinutes()+\":\"+today.getSeconds();var dateTime=date+' '+time;console.log(_this2.state.Cpuu);console.log(msg);var obj=JSON.parse(msg.data);//console.log(obj)\n_this2.setState(function(prevState){return{//chatHistory: [...this.state.chatHistory, msg]\nCpuu:[].concat(_toConsumableArray(_this2.state.Cpuu),[[dateTime,obj.Cpuu]]),Infop:obj.Infop,Memfree:obj.Memfree,//[Date.now().toLocaleString(),obj.Mempercent]\nMempercent:[].concat(_toConsumableArray(_this2.state.Mempercent),[[dateTime,obj.Mempercent]]),Memtotal:obj.Memtotal,Procsr:obj.Procsr,Procss:obj.Procss,Procst:obj.Procst,Procsz:obj.Procsz,Totalprocs:obj.Totalprocs,cpuinfo:obj.Cpuu,meminfo:obj.Mempercent};});console.log(obj);});}},{key:\"send\",value:function send(pid){//console.log(pid)\nsendMsg(pid);//console.log(event.target.value)\n/*if(event.keyCode === 13) {\n          sendMsg(event.target.value);\n          event.target.value = \"\";\n        }\n        */}},{key:\"render\",value:function render(){var _React$createElement;return React.createElement(Fragment,null,React.createElement(Header,null),React.createElement(Body,(_React$createElement={data:this.state.Infop,send:this.send,totalProcs:this.state.Totalprocs,datacpu:this.state.Cpuu},_defineProperty(_React$createElement,\"totalProcs\",this.state.Totalprocs),_defineProperty(_React$createElement,\"procsS\",this.state.Procss),_defineProperty(_React$createElement,\"procsR\",this.state.Procsr),_defineProperty(_React$createElement,\"procsT\",this.state.Procst),_defineProperty(_React$createElement,\"procsZ\",this.state.ProcsZ),_defineProperty(_React$createElement,\"cpu\",this.state.cpuinfo),_defineProperty(_React$createElement,\"dataram\",this.state.Mempercent),_defineProperty(_React$createElement,\"memTotal\",this.state.Memtotal),_defineProperty(_React$createElement,\"memFree\",this.state.Memfree),_defineProperty(_React$createElement,\"memPercent\",this.state.meminfo),_React$createElement)),\" \");}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/bj/Documentos/Sopes2/practia2/frontend/src/App.js"],"names":["React","Component","Fragment","Header","Body","connect","sendMsg","App","props","console","log","state","cpuinfo","meminfo","Cpuu","Infop","Array","Memfree","Mempercent","Memtotal","Procsr","Procss","Procst","Procsz","Totalprocs","autorize","username","pass","msg","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","dateTime","obj","JSON","parse","data","setState","prevState","pid","send","ProcsZ"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\n\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\n\n\n\n\nclass App extends Component {\n\n\n\n    //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n\n    state = {\n            cpuinfo: -1,\n            meminfo: -1,\n            Cpuu: [\n                [\"Time\", \"Cpu\"]\n            ],\n            Infop: new Array(),\n            Memfree: -1,\n            Mempercent: [\n                [\"Time\", \"Ram\"]\n            ],\n            Memtotal: -1,\n            Procsr: -1,\n            Procss: -1,\n            Procst: -1,\n            Procsz: -1,\n            Totalprocs: -1,\n            autorize: false,\n            username: \"\",\n            pass: \"\"\n        }\n        /*  \nstate = {\n    listacomplementos: new Array()\n}\n*/\n    constructor(props) {\n        console.log(\"Constructor de App\")\n        super(props);\n\n\n        console.log(this.state.Cpuu);\n    }\n\n    componentDidMount() {\n        console.log(\"En el componentDidMount de App \")\n        connect((msg) => {\n            console.log(\"New Message\")\n            let today = new Date();\n            let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            let dateTime = date + ' ' + time;\n            console.log(this.state.Cpuu);\n            console.log(msg);\n            let obj = JSON.parse(msg.data);\n            //console.log(obj)\n            this.setState(prevState => ({\n                //chatHistory: [...this.state.chatHistory, msg]\n                Cpuu: [...this.state.Cpuu, [dateTime, obj.Cpuu]],\n                Infop: obj.Infop,\n                Memfree: obj.Memfree,\n                //[Date.now().toLocaleString(),obj.Mempercent]\n                Mempercent: [...this.state.Mempercent, [dateTime, obj.Mempercent]],\n                Memtotal: obj.Memtotal,\n                Procsr: obj.Procsr,\n                Procss: obj.Procss,\n                Procst: obj.Procst,\n                Procsz: obj.Procsz,\n                Totalprocs: obj.Totalprocs,\n                cpuinfo: obj.Cpuu,\n                meminfo: obj.Mempercent\n\n            }))\n\n            console.log(obj);\n        });\n    }\n    send(pid) {\n        //console.log(pid)\n        sendMsg(pid);\n        //console.log(event.target.value)\n        /*if(event.keyCode === 13) {\n          sendMsg(event.target.value);\n          event.target.value = \"\";\n        }\n        */\n    }\n\n    render() {\n\n\n\n\n        return ( <\n            Fragment >\n            <\n            Header / >\n\n            <\n            Body\n            data = { this.state.Infop }\n            send = { this.send }\n            totalProcs = {this.state.Totalprocs}\n\n\n            datacpu = { this.state.Cpuu }\n            totalProcs = { this.state.Totalprocs }\n            procsS = { this.state.Procss }\n            procsR = { this.state.Procsr }\n            procsT = { this.state.Procst }\n            procsZ = { this.state.ProcsZ }\n            cpu = { this.state.cpuinfo }\n\n            dataram = { this.state.Mempercent }\n            memTotal = { this.state.Memtotal }\n            memFree = { this.state.Memfree }\n            memPercent = { this.state.meminfo }\n\n            / > < /\n            Fragment >\n        );\n\n\n\n\n\n\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}