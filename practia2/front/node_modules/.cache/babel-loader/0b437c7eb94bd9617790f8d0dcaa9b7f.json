{"ast":null,"code":"var _jsxFileName = \"/home/bj/Documentos/Sopes2/practia2/frontend/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport Login from './components/Login/Login';\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\nclass App extends Component {\n  //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n\n  /*\n  state = {\n    cpuinfo:-1,\n    meminfo:-1,\n    Cpuu: [[\"Time\",\"Cpu\"]],\n    Infop: new Array(),\n    Memfree : -1,\n    Mempercent: [[\"Time\",\"Ram\"]],\n    Memtotal : -1,\n    Procsr : -1,\n    Procss : -1,\n    Procst : -1,\n    Procsz : -1,\n    Totalprocs : -1,\n    autorize: false,\n    username:\"\",\n    pass:\"\"\n  }\n  */\n  constructor(props) {\n    console.log(\"Constructor de App\");\n    super(props);\n    this.currencies = [{\n      value: 'USD',\n      label: '$'\n    }, {\n      value: 'EUR',\n      label: '€'\n    }, {\n      value: 'BTC',\n      label: '฿'\n    }, {\n      value: 'JPY',\n      label: '¥'\n    }];\n    this.state = {\n      listacomplementos: new Array()\n    };\n\n    this.handleUserChange = event => {\n      console.log(\"NOMBRE DEL USER:\" + event.target.value);\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handlePassChange = event => {\n      console.log(\"NOMBRE DEL PASS:\" + event.target.value);\n      this.setState({\n        pass: event.target.value\n      });\n    };\n\n    this.loguearse = () => {\n      if (this.state.username == \"admin\" && this.state.pass == \"admin\") {\n        this.setState({\n          autorize: true\n        });\n      }\n    };\n\n    connect();\n    console.log(this.state.Cpuu);\n  }\n\n  componentDidMount() {\n    connect(msg => {\n      //console.log(\"New Message\")\n      let today = new Date();\n      let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      let dateTime = date + ' ' + time; //console.log(this.state.Cpuu);\n      //console.log(msg);\n\n      let obj = JSON.parse(msg.data); //console.log(obj)\n\n      this.setState(prevState => ({\n        //chatHistory: [...this.state.chatHistory, msg]\n        Cpuu: [...this.state.Cpuu, [dateTime, obj.Cpuu]],\n        Infop: obj.Infop,\n        Memfree: obj.Memfree,\n        //[Date.now().toLocaleString(),obj.Mempercent]\n        Mempercent: [...this.state.Mempercent, [dateTime, obj.Mempercent]],\n        Memtotal: obj.Memtotal,\n        Procsr: obj.Procsr,\n        Procss: obj.Procss,\n        Procst: obj.Procst,\n        Procsz: obj.Procsz,\n        Totalprocs: obj.Totalprocs,\n        cpuinfo: obj.Cpuu,\n        meminfo: obj.Mempercent\n      }));\n      console.log(obj);\n    });\n  }\n\n  send(pid) {\n    //console.log(pid)\n    sendMsg(pid); //console.log(event.target.value)\n\n    /*if(event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n    */\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Body, {\n      complementos: this.state.listacomplementos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bj/Documentos/Sopes2/practia2/frontend/src/App.js"],"names":["React","Component","Fragment","Header","Body","Login","connect","sendMsg","TextField","makeStyles","Button","App","constructor","props","console","log","currencies","value","label","state","listacomplementos","Array","handleUserChange","event","target","setState","username","handlePassChange","pass","loguearse","autorize","Cpuu","componentDidMount","msg","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","dateTime","obj","JSON","parse","data","prevState","Infop","Memfree","Mempercent","Memtotal","Procsr","Procss","Procst","Procsz","Totalprocs","cpuinfo","meminfo","send","pid","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport Login from './components/Login/Login';\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\n\n\n\n\nimport {TextField} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\nclass App extends Component {\n  \n  \n  currencies = [\n    {\n      value: 'USD',\n      label: '$',\n    },\n    {\n      value: 'EUR',\n      label: '€',\n    },\n    {\n      value: 'BTC',\n      label: '฿',\n    },\n    {\n      value: 'JPY',\n      label: '¥',\n    },\n  ];\n  //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n  /*\n  state = {\n    cpuinfo:-1,\n    meminfo:-1,\n    Cpuu: [[\"Time\",\"Cpu\"]],\n    Infop: new Array(),\n    Memfree : -1,\n    Mempercent: [[\"Time\",\"Ram\"]],\n    Memtotal : -1,\n    Procsr : -1,\n    Procss : -1,\n    Procst : -1,\n    Procsz : -1,\n    Totalprocs : -1,\n    autorize: false,\n    username:\"\",\n    pass:\"\"\n  }\n  */\n state = {\n   listacomplementos: new Array()\n }\n  \n  constructor(props) {\n    console.log(\"Constructor de App\")\n    super(props);\n    connect();\n    \n    console.log(this.state.Cpuu);\n  }\n  handleUserChange = (event) =>{\n    console.log(\"NOMBRE DEL USER:\"+event.target.value);\n    this.setState({username:event.target.value})\n  }\n  handlePassChange = (event) =>{\n    console.log(\"NOMBRE DEL PASS:\"+event.target.value);\n    this.setState({pass:event.target.value})\n  }\n  loguearse = () =>{\n    if(this.state.username==\"admin\" && this.state.pass==\"admin\"){\n      this.setState({autorize:true});\n    }\n  }\n  componentDidMount() {\n    connect((msg) => {\n      //console.log(\"New Message\")\n      let today = new Date();\n      let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n      let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      let dateTime = date+' '+time;\n      //console.log(this.state.Cpuu);\n      //console.log(msg);\n      let obj = JSON.parse(msg.data);\n      //console.log(obj)\n      this.setState(prevState => ({\n        //chatHistory: [...this.state.chatHistory, msg]\n        Cpuu:[...this.state.Cpuu,[dateTime,obj.Cpuu]],\n        Infop: obj.Infop,\n        Memfree: obj.Memfree,\n        //[Date.now().toLocaleString(),obj.Mempercent]\n        Mempercent: [...this.state.Mempercent,[dateTime,obj.Mempercent]] ,\n        Memtotal: obj.Memtotal,\n        Procsr: obj.Procsr,\n        Procss: obj.Procss,\n        Procst: obj.Procst,\n        Procsz: obj.Procsz,\n        Totalprocs : obj.Totalprocs,\n        cpuinfo:obj.Cpuu,\n        meminfo:obj.Mempercent\n\n      }))\n\n      console.log(obj);\n    });\n  }\n  send(pid) {\n    //console.log(pid)\n    sendMsg(pid);\n    //console.log(event.target.value)\n    /*if(event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n    */\n  }\n  \n  render() {\n    \n  \n   \n\n    return (\n      <Fragment>\n        <Header />\n        \n        <Body\n          complementos={this.state.listacomplementos}\n         \n         />\n      </Fragment>\n    );\n\n\n\n   \n   \n   \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}