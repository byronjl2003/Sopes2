{"ast":null,"code":"var _jsxFileName = \"/home/bj/go/src/frontend/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\nimport AnimatedNumber from 'react-animated-number';\nimport prettyBytes from 'pretty-bytes';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\n\nclass App extends Component {\n  //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n  constructor(props) {\n    console.log(\"Constructor de App\");\n    super(props); //connect();\n\n    this.useStyles = makeStyles(theme => ({\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200\n      },\n      dense: {\n        marginTop: 19\n      },\n      menu: {\n        width: 200\n      }\n    }));\n    this.currencies = [{\n      value: 'USD',\n      label: '$'\n    }, {\n      value: 'EUR',\n      label: '€'\n    }, {\n      value: 'BTC',\n      label: '฿'\n    }, {\n      value: 'JPY',\n      label: '¥'\n    }];\n    this.style = {\n      margin: 15\n    };\n    this.state = {\n      Cpuu: [[\"Time\", \"Cpu\"]],\n      Infop: new Array(),\n      Memfree: -1,\n      Mempercent: [[\"Time\", \"Ram\"]],\n      Memtotal: -1,\n      Procsr: -1,\n      Procss: -1,\n      Procst: -1,\n      Procsz: -1,\n      Totalprocs: -1,\n      autorize: false\n    };\n    console.log(this.state.Cpuu);\n  }\n\n  componentDidMount() {\n    connect(msg => {\n      //console.log(\"New Message\")\n      let today = new Date();\n      let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      let dateTime = date + ' ' + time; //console.log(this.state.Cpuu);\n      //console.log(msg);\n\n      let obj = JSON.parse(msg.data); //console.log(obj)\n\n      this.setState(prevState => ({\n        //chatHistory: [...this.state.chatHistory, msg]\n        Cpuu: [...this.state.Cpuu, [dateTime, obj.Cpuu]],\n        Infop: obj.Infop,\n        Memfree: obj.Memfree,\n        //[Date.now().toLocaleString(),obj.Mempercent]\n        Mempercent: [...this.state.Mempercent, [dateTime, obj.Mempercent]],\n        Memtotal: obj.Memtotal,\n        Procsr: obj.Procsr,\n        Procss: obj.Procss,\n        Procst: obj.Procst,\n        Procsz: obj.Procsz,\n        Totalprocs: obj.Totalprocs,\n        username: \"\"\n      }));\n      console.log(obj);\n    });\n  }\n\n  send(pid) {\n    //console.log(pid)\n    sendMsg(pid); //console.log(event.target.value)\n\n    /*if(event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n    */\n  }\n\n  render() {\n    const classes = useStyles();\n\n    if (this.state.autorize) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(AnimatedNumber, {\n        component: \"text\",\n        value: this.state.Memtotal,\n        style: {\n          transition: '0.8s ease-out',\n          fontSize: 48,\n          transitionProperty: 'background-color, color, opacity'\n        },\n        frameStyle: perc => perc === 100 ? {} : {\n          backgroundColor: '#ffeb3b'\n        },\n        duration: 300,\n        formatValue: n => prettyBytes(n),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Body, {\n        data: this.state.Infop,\n        send: this.send,\n        datacpu: this.state.Cpuu,\n        dataram: this.state.Mempercent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bj/go/src/frontend/src/App.js"],"names":["React","Component","Fragment","Header","Body","connect","sendMsg","AnimatedNumber","prettyBytes","RaisedButton","TextField","App","constructor","props","console","log","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","currencies","value","label","style","margin","state","Cpuu","Infop","Array","Memfree","Mempercent","Memtotal","Procsr","Procss","Procst","Procsz","Totalprocs","autorize","componentDidMount","msg","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","dateTime","obj","JSON","parse","data","setState","prevState","username","send","pid","render","classes","transition","fontSize","transitionProperty","perc","backgroundColor","n"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from \"react\";\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport './App.css';\nimport { connect, sendMsg } from \"./api\";\nimport AnimatedNumber from 'react-animated-number';\nimport prettyBytes from 'pretty-bytes';\n\n\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\n\n\nclass App extends Component {\n  useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n    dense: {\n      marginTop: 19,\n    },\n    menu: {\n      width: 200,\n    },\n  }));\n  \n  currencies = [\n    {\n      value: 'USD',\n      label: '$',\n    },\n    {\n      value: 'EUR',\n      label: '€',\n    },\n    {\n      value: 'BTC',\n      label: '฿',\n    },\n    {\n      value: 'JPY',\n      label: '¥',\n    },\n  ];\n  //state = {infoprocess:{},inforam:{},inforam:{},chatHistory:new Array()}\n  style = {\n    margin: 15,\n   };\n  state = {\n    Cpuu: [[\"Time\",\"Cpu\"]],\n    Infop: new Array(),\n    Memfree : -1,\n    Mempercent: [[\"Time\",\"Ram\"]],\n    Memtotal : -1,\n    Procsr : -1,\n    Procss : -1,\n    Procst : -1,\n    Procsz : -1,\n    Totalprocs : -1,\n    autorize: false\n  }\n  constructor(props) {\n    console.log(\"Constructor de App\")\n    super(props);\n    //connect();\n    \n    console.log(this.state.Cpuu);\n  }\n  \n  componentDidMount() {\n    connect((msg) => {\n      //console.log(\"New Message\")\n      let today = new Date();\n      let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n      let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      let dateTime = date+' '+time;\n      //console.log(this.state.Cpuu);\n      //console.log(msg);\n      let obj = JSON.parse(msg.data);\n      //console.log(obj)\n      this.setState(prevState => ({\n        //chatHistory: [...this.state.chatHistory, msg]\n        Cpuu:[...this.state.Cpuu,[dateTime,obj.Cpuu]],\n        Infop: obj.Infop,\n        Memfree: obj.Memfree,\n        //[Date.now().toLocaleString(),obj.Mempercent]\n        Mempercent: [...this.state.Mempercent,[dateTime,obj.Mempercent]] ,\n        Memtotal: obj.Memtotal,\n        Procsr: obj.Procsr,\n        Procss: obj.Procss,\n        Procst: obj.Procst,\n        Procsz: obj.Procsz,\n        Totalprocs : obj.Totalprocs,\n        username:\"\"\n\n      }))\n\n      console.log(obj);\n    });\n  }\n  send(pid) {\n    //console.log(pid)\n    sendMsg(pid);\n    //console.log(event.target.value)\n    /*if(event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n    */\n  }\n\n  render() {\n    const classes = useStyles();\n \n   if(this.state.autorize){\n\n    return (\n      <Fragment>\n        <Header />\n        <AnimatedNumber component=\"text\" value={this.state.Memtotal}\n              style={{\n                  transition: '0.8s ease-out',\n                  fontSize: 48,\n                  transitionProperty:\n                      'background-color, color, opacity'\n              }}\n              frameStyle={perc => (\n                  perc === 100 ? {} : {backgroundColor: '#ffeb3b'}\n              )}\n              duration={300}\n              formatValue={n => prettyBytes(n)}/>\n        <Body data={this.state.Infop} send={this.send} datacpu={this.state.Cpuu} dataram={this.state.Mempercent}/>\n      </Fragment>\n    );\n\n\n\n   }\n   else{\n    return (\n      <Fragment>\n         \n      </Fragment>\n    );\n    \n   }\n   \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}